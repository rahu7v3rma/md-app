// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`profile snapshot 1`] = `
<RCTSafeAreaView
  style={
    {
      "backgroundColor": "#FAFAFF",
      "flex": 1,
    }
  }
>
  <View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": true,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#FFFFFF",
          "flexDirection": "row",
          "justifyContent": "center",
          "opacity": 1,
          "paddingBottom": 22,
          "paddingHorizontal": 19,
          "paddingTop": 10,
        }
      }
    >
      <View
        style={
          {
            "alignItems": "flex-start",
            "width": "20%",
          }
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "backgroundColor": "#D3E29F40",
              "borderRadius": 100,
              "height": 48,
              "justifyContent": "center",
              "margin": 0,
              "opacity": 1,
              "paddingHorizontal": 15.5,
              "paddingVertical": 24,
              "shadowColor": "",
              "shadowOffset": {
                "height": 0,
                "width": 0,
              },
              "shadowOpacity": 0,
              "width": 48,
            }
          }
          testID="leftButton"
        >
          <RNSVGSvgView
            align="xMidYMid"
            bbHeight={14}
            bbWidth={8}
            fill="none"
            focusable={false}
            height={14}
            meetOrSlice={0}
            minX={0}
            minY={0}
            style={
              [
                {
                  "backgroundColor": "transparent",
                  "borderWidth": 0,
                },
                {
                  "height": "auto",
                  "width": "auto",
                },
                {
                  "flex": 0,
                  "height": 14,
                  "width": 8,
                },
              ]
            }
            vbHeight={14}
            vbWidth={8}
            width={8}
          >
            <RNSVGGroup
              fill={null}
              propList={
                [
                  "fill",
                ]
              }
            >
              <RNSVGPath
                d="M5.97999 0.319993L2.76999 3.52999L0.79999 5.48999C-0.0300097 6.31999 -0.0300097 7.66999 0.79999 8.49999L5.97999 13.68C6.65999 14.36 7.81999 13.87 7.81999 12.92V7.30999V1.07999C7.81999 0.119992 6.65999 -0.360007 5.97999 0.319993Z"
                fill={4280752721}
                propList={
                  [
                    "fill",
                  ]
                }
              />
            </RNSVGGroup>
          </RNSVGSvgView>
        </View>
      </View>
      <View
        style={
          {
            "alignItems": "center",
            "width": "60%",
          }
        }
      >
        <Text
          adjustsFontSizeToFit={true}
          style={
            [
              {
                "fontFamily": "Poppins",
              },
              undefined,
              {
                "color": "#72996B",
                "fontSize": 16,
                "fontWeight": "600",
                "lineHeight": 24,
              },
            ]
          }
          testID="title"
        >
          Settings
        </Text>
      </View>
      <View
        style={
          {
            "alignItems": "flex-end",
            "width": "20%",
          }
        }
      />
    </View>
    <View
      style={false}
    >
      <View
        style={false}
      />
    </View>
  </View>
  <View
    style={
      {
        "alignItems": "center",
        "flex": 1,
        "paddingHorizontal": 20,
      }
    }
  >
    <View
      style={
        {
          "marginTop": 45,
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": true,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={false}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
      >
        <Image
          source={
            {
              "testUri": "../../../src/assets/images/default_avatar.jpg",
            }
          }
          style={
            {
              "borderRadius": 50,
              "height": 110,
              "width": 110,
            }
          }
        />
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#F0E957",
            "borderColor": "white",
            "borderRadius": 18,
            "borderWidth": 1,
            "bottom": -2,
            "height": 36,
            "justifyContent": "center",
            "opacity": 1,
            "position": "absolute",
            "right": -2,
            "width": 36,
          }
        }
        testID="editProfilePic"
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={18}
          bbWidth={18}
          fill="none"
          focusable={false}
          height={18}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            [
              {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              {
                "flex": 0,
                "height": 18,
                "width": 18,
              },
            ]
          }
          vbHeight={20}
          vbWidth={20}
          width={18}
        >
          <RNSVGGroup
            fill={null}
            propList={
              [
                "fill",
              ]
            }
          >
            <RNSVGPath
              d="M7.93 8.806l3.516-3.515a2.307 2.307 0 113.263 3.263l-3.515 3.516a11.925 11.925 0 01-5.54 3.136l-.68.17a.289.289 0 01-.35-.35l.17-.68a11.924 11.924 0 013.137-5.54z"
              fill={4294967295}
              fillOpacity={0.24}
              propList={
                [
                  "fill",
                  "fillOpacity",
                ]
              }
            />
            <RNSVGPath
              d="M11.446 5.291l.53.53-.53-.53zM7.93 8.806l.53.53-.53-.53zm6.778-.252l-.53-.53.53.53zm-3.515 3.516l-.53-.53.53.53zm-5.54 3.136l-.182-.728.182.728zm-.68.17l.183.727-.182-.727zm-.35-.35l.728.181-.728-.182zm.17-.68l.728.182-.728-.182zm6.121-9.585L7.4 8.276l1.06 1.06 3.516-3.514-1.06-1.061zm3.263 3.263l-3.515 3.515 1.061 1.06 3.515-3.514-1.06-1.06zm-8.706 6.454l-.68.17.365 1.455.68-.17-.365-1.455zm-.12.73l.17-.68-1.456-.364-.17.68 1.456.363zm-.56-.56a.461.461 0 01.56.56l-1.455-.365c-.19.761.499 1.45 1.26 1.26l-.364-1.455zm5.871-3.109a11.173 11.173 0 01-5.19 2.94l.363 1.455a12.674 12.674 0 005.888-3.334l-1.06-1.06zM7.4 8.276a12.674 12.674 0 00-3.334 5.888l1.456.364A11.174 11.174 0 018.46 9.337L7.4 8.277zm5.677-4.41c-.81 0-1.588.322-2.162.895l1.06 1.06a1.557 1.557 0 011.102-.456v-1.5zm1.558 3.057c0 .413-.165.809-.457 1.101l1.061 1.06a3.057 3.057 0 00.896-2.161h-1.5zm1.5 0a3.057 3.057 0 00-3.058-3.058v1.5c.86 0 1.558.698 1.558 1.558h1.5zM13.8 8.513c-.431.144-1.098-.052-1.68-.634-.582-.582-.778-1.249-.634-1.68l-1.423-.475c-.4 1.2.22 2.438.997 3.215.777.778 2.014 1.397 3.215.997L13.8 8.513z"
              fill={4294967295}
              propList={
                [
                  "fill",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
    <Text
      adjustsFontSizeToFit={true}
      style={
        [
          {
            "fontFamily": "Poppins",
          },
          {
            "marginTop": 32,
            "textAlign": "center",
          },
          {
            "color": "#4D4F4D",
            "fontSize": 28,
            "fontWeight": "700",
            "lineHeight": 36,
          },
        ]
      }
    >
      undefined undefined
    </Text>
    <Text
      adjustsFontSizeToFit={true}
      style={
        [
          {
            "fontFamily": "Poppins",
          },
          {
            "textAlign": "center",
          },
          {
            "color": "#72996B",
            "fontSize": 16,
            "fontWeight": "400",
            "lineHeight": 24,
          },
        ]
      }
    />
    <View
      style={
        {
          "flex": 1,
          "justifyContent": "flex-end",
          "marginBottom": 70,
          "width": "100%",
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#72996B",
            "borderBottomWidth": 0,
            "borderColor": "#72996B",
            "borderRadius": 20,
            "borderWidth": 0,
            "justifyContent": "center",
            "margin": 0,
            "opacity": 1,
            "paddingHorizontal": 15.5,
            "paddingVertical": 24,
            "width": "100%",
          }
        }
        testID="changepassword"
      >
        <Text
          adjustsFontSizeToFit={true}
          style={
            [
              {
                "fontFamily": "Poppins",
              },
              undefined,
              {
                "color": "#FFFFFF",
                "fontSize": 14,
                "fontWeight": "600",
                "lineHeight": 22,
              },
            ]
          }
        >
          Change password
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#FFFFFF",
            "borderBottomWidth": 0,
            "borderColor": "#72996B",
            "borderRadius": 20,
            "borderWidth": 0,
            "elevation": 0.1,
            "justifyContent": "center",
            "margin": 0,
            "marginTop": 16,
            "opacity": 1,
            "paddingHorizontal": 15.5,
            "paddingVertical": 24,
            "shadowColor": "#000000",
            "shadowOffset": {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.05,
            "shadowRadius": 17,
            "width": "100%",
          }
        }
        testID="logout"
      >
        <Text
          adjustsFontSizeToFit={true}
          style={
            [
              {
                "fontFamily": "Poppins",
              },
              undefined,
              {
                "color": "#72996B",
                "fontSize": 14,
                "fontWeight": "600",
                "lineHeight": 22,
              },
            ]
          }
        >
          Logout
        </Text>
      </View>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "alignItems": "center",
            "backgroundColor": "#B16663",
            "borderBottomWidth": 0,
            "borderColor": "#72996B",
            "borderRadius": 20,
            "borderWidth": 0,
            "justifyContent": "center",
            "margin": 0,
            "marginTop": 16,
            "opacity": 1,
            "paddingHorizontal": 15.5,
            "paddingVertical": 24,
            "width": "100%",
          }
        }
        testID="deleteAccount"
      >
        <Text
          adjustsFontSizeToFit={true}
          style={
            [
              {
                "fontFamily": "Poppins",
              },
              undefined,
              {
                "color": "#FFFFFF",
                "fontSize": 14,
                "fontWeight": "600",
                "lineHeight": 22,
              },
            ]
          }
        >
          Delete account
        </Text>
      </View>
    </View>
    <Text
      adjustsFontSizeToFit={true}
      style={
        [
          {
            "fontFamily": "Poppins",
          },
          {
            "bottom": 20,
            "position": "absolute",
          },
          {
            "color": "#A4AAAF",
            "fontSize": 12,
            "fontWeight": "500",
            "lineHeight": 20,
          },
        ]
      }
    >
      Version app 
      unknown
    </Text>
  </View>
  <Modal
    animationType="fade"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    supportedOrientations={
      [
        "portrait",
        "portrait-upside-down",
        "landscape",
        "landscape-left",
        "landscape-right",
      ]
    }
    transparent={true}
    visible={false}
  />
</RCTSafeAreaView>
`;
