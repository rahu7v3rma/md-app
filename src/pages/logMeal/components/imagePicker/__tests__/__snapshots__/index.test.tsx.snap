// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`imagePicker snapshot 1`] = `
<View
  style={
    {
      "paddingVertical": 10,
    }
  }
>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#FFFFFF",
        "borderRadius": 12,
        "display": "flex",
        "justifyContent": "center",
        "width": "100%",
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "alignItems": "center",
          "borderRadius": 12,
          "height": 209,
          "justifyContent": "center",
          "opacity": 1,
          "width": "100%",
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
        testID="imagePickerButton"
      >
        <RNSVGSvgView
          align="xMidYMid"
          bbHeight={40}
          bbWidth={48}
          fill="none"
          focusable={false}
          height={40}
          meetOrSlice={0}
          minX={0}
          minY={0}
          style={
            [
              {
                "backgroundColor": "transparent",
                "borderWidth": 0,
              },
              {
                "flex": 0,
                "height": 40,
                "width": 48,
              },
            ]
          }
          vbHeight={40}
          vbWidth={48}
          width={48}
          xml="<svg width="48" height="40" viewBox="0 0 48 40" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path
        d="M31.7413 23.239C31.7413 27.5077 28.2687 30.9803 24 30.9803C19.7313 30.9803 16.2601 27.5077 16.2601 23.239C16.2601 18.9703 19.7313 15.4978 24 15.4978C28.2687 15.4978 31.7413 18.9716 31.7413 23.239ZM48 12.2468V34.2339C48 37.165 45.6235 39.5415 42.6923 39.5415H5.30768C2.37651 39.5415 0 37.165 0 34.2339V12.2468C0 9.31564 2.37651 6.93913 5.30768 6.93913H11.8361V5.10267C11.8361 2.53773 13.9141 0.45845 16.4803 0.45845H31.5197C34.0859 0.45845 36.1639 2.53773 36.1639 5.10267V6.9378H42.6923C45.6235 6.93913 48 9.31564 48 12.2468ZM35.722 23.239C35.722 16.7756 30.4634 11.517 24 11.517C17.5379 11.517 12.2793 16.7756 12.2793 23.239C12.2793 29.7024 17.5379 34.961 24 34.961C30.4634 34.961 35.722 29.7024 35.722 23.239Z"
        fill="#D3E29F" />
</svg>"
          xmlns="http://www.w3.org/2000/svg"
        >
          <RNSVGGroup
            fill={null}
            propList={
              [
                "fill",
              ]
            }
          >
            <RNSVGPath
              d="M31.7413 23.239C31.7413 27.5077 28.2687 30.9803 24 30.9803C19.7313 30.9803 16.2601 27.5077 16.2601 23.239C16.2601 18.9703 19.7313 15.4978 24 15.4978C28.2687 15.4978 31.7413 18.9716 31.7413 23.239ZM48 12.2468V34.2339C48 37.165 45.6235 39.5415 42.6923 39.5415H5.30768C2.37651 39.5415 0 37.165 0 34.2339V12.2468C0 9.31564 2.37651 6.93913 5.30768 6.93913H11.8361V5.10267C11.8361 2.53773 13.9141 0.45845 16.4803 0.45845H31.5197C34.0859 0.45845 36.1639 2.53773 36.1639 5.10267V6.9378H42.6923C45.6235 6.93913 48 9.31564 48 12.2468ZM35.722 23.239C35.722 16.7756 30.4634 11.517 24 11.517C17.5379 11.517 12.2793 16.7756 12.2793 23.239C12.2793 29.7024 17.5379 34.961 24 34.961C30.4634 34.961 35.722 29.7024 35.722 23.239Z"
              fill={4292076191}
              propList={
                [
                  "fill",
                ]
              }
            />
          </RNSVGGroup>
        </RNSVGSvgView>
      </View>
    </View>
  </View>
  <View
    style={
      {
        "backgroundColor": "#D3E29F40",
      }
    }
  >
    <Modal
      animationType="fade"
      hardwareAccelerated={false}
      onRequestClose={[Function]}
      supportedOrientations={
        [
          "portrait",
          "portrait-upside-down",
          "landscape",
          "landscape-left",
          "landscape-right",
        ]
      }
      transparent={true}
      visible={false}
    />
  </View>
</View>
`;
